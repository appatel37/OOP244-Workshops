I was able to pick up a new word at this workshop. In this circumstance, the rule of three still holds true. This rule states that if any of the three were created by a destructor, duplicate function Object(), or copy assignment operator, then all three must be provided. The three default techniques stated above are essentially supported by C++. Nevertheless, if I use variables for dynamic allocation, memory leaks will happen. This is done so that when the duplicate function, Object(), or copy assignment operator are used, thin clones can be produced by default. Moreover, the uninstaller does not clear the designated memory. I carefully destroyed the memory copy that I had earlier copied just before the application terminated.